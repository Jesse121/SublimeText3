{
    // Simply using `node` without specifying a path sometimes doesn't work :(
    // https://github.com/victorporof/Sublime-HTMLPrettify#oh-noez-command-not-found
    // http://nodejs.org/#download
    "node_path":
    {
        "windows": "C:/Program Files/nodejs/node.exe",
        "linux": "/usr/bin/nodejs",
        "osx": "/usr/local/bin/node"
    },

    // Automatically format when a file is saved.
    "format_on_save": false,

    // Automatically format when a file is opened. (Sublime Text 3 only)
    "format_on_open": false,

    // Automatically format when a file is focused. (Sublime Text 3 only)
    "format_on_focus": false,

    // Automatically format when a file loses focus. (Sublime Text 3 only)
    "format_on_focus_lost": false,

    // Automatically format while a file is being edited. (Experimental / Sublime Text 3 only)
    "format_while_editing": false,

    // Only format the selection if there's one available.
    "format_selection_only": true,

    // Save to a temporary file before prettifying.
    "save_to_temp_file_before_prettifying": true,

    // Settings determining which files are allowed to be prettified.
    // !!! All the keys below need to be included in your user settings for them to work. !!!
    "global_file_rules":
    {
        // Be sure to include all of the `html`, `css`, `js` and `json` keys in your user settings
        // if you want to be able to prettify the default files as well.
        "html":
        {
            "allowed_file_extensions": ["htm", "html", "xhtml", "shtml", "xml", "svg", "vue"],
            "allowed_file_syntaxes": ["html", "xml", "vue"],
            "disallowed_file_patterns": []
        },
        // Be sure to include all of the `html`, `css`, `js` and `json` keys in your user settings
        // if you want to be able to prettify the default files as well.
        "css":
        {
            "allowed_file_extensions": ["css", "scss", "sass", "less"],
            "allowed_file_syntaxes": ["css", "sass", "less"],
            "disallowed_file_patterns": []
        },
        // Be sure to include all of the `html`, `css`, `js` and `json` keys in your user settings
        // if you want to be able to prettify the default files as well.
        "js":
        {
            "allowed_file_extensions": ["js", "jsx"],
            "allowed_file_syntaxes": ["javascript", "ecma", "react", "babel"],
            "disallowed_file_patterns": []
        },
        // Be sure to include all of the `html`, `css`, `js` and `json` keys in your user settings
        // if you want to be able to prettify the default files as well.
        "json":
        {
            "allowed_file_extensions": [
                "json",
                "babelrc",
                "eslintrc",
                "jshintrc",
                "jsbeautifyrc",
                "sublime-settings",
                "sublime-keymap",
                "sublime-commands",
                "sublime-menu"
            ],
            "allowed_file_syntaxes": ["json"],
            "disallowed_file_patterns": []
        }
    },

    // Respect `.editorconfig` rules, overriding settings from `.jsbeautifyrc`.
    // Note that `use_editor_syntax` and `use_editor_indentation` have precedence
    // and will always override any other settings from any configuration file
    // like `.jsbeautifyrc` and `.editorconfig`.
    "respect_editorconfig_files": true,

    // Use current syntax to determine file type, instead of the extension.
    "use_editor_syntax": true,

    // Use current identation settings to override the ones from `.jsbeautifyrc`.
    "use_editor_indentation": false,

    // Log the settings passed to the prettifier from `.jsbeautifyrc`.
    "print_diagnostics": true
}